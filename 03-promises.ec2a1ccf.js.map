{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,OAAQC,SAASC,cAAc,QAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,oBAC/BG,SAAUJ,SAASC,cAAc,sBACjCI,UAAWL,SAASC,cAAc,wBAKpC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPV,EAASC,OAAOiB,iBAAiB,UAejC,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAIC,EAAaC,OAAOtB,EAASI,QAAQmB,OACnCC,EAAOF,OAAOtB,EAASK,OAAOkB,OAC9BE,EAASH,OAAOtB,EAASM,SAASiB,OAE/BG,EAAQ,EAAGA,GAASD,EAAQC,GAAS,EAC5ClB,EAAckB,EAAOL,GAClBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAEjBZ,EAAA+B,OAAOC,QAAQ,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAElBZ,EAAA+B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE5DW,GAAcG,EAEhBxB,EAASC,OAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elements = {\n  formEl: document.querySelector('form'),\n  delayEl: document.querySelector('input[name = delay]'),\n  stepEl: document.querySelector('input[name=step]'),\n  amountEl: document.querySelector('input[name=amount]'),\n  createBtn: document.querySelector('button[type=submit]'),\n};\n\nelements.formEl.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayFirst = Number(elements.delayEl.value);\n  const step = Number(elements.stepEl.value);\n  const amount = Number(elements.amountEl.value);\n\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delayFirst)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delayFirst += step;\n  }\n  elements.formEl.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$elements","formEl","document","querySelector","delayEl","stepEl","amountEl","createBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayFirst","Number","value","step","amount","index","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.ec2a1ccf.js.map"}